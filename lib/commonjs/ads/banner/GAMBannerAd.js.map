{"version":3,"sources":["GAMBannerAd.tsx"],"names":["GAMBannerAd","BaseAd","handleOnAppEvent","event","name","info","nativeEvent","props","onAppEvent","render","style","state","handleOnAdLoaded","bind","handleOnAdFailedToLoad","handleOnAdOpened","handleOnAdClosed","handleSizeChange","requestOptions","el","bannerRef"],"mappings":";;;;;;;AAAA;;AAIA;;;;;;;;;;AAEA,MAAMA,WAAN,SAA0BC,eAA1B,CAAmD;AACvCC,EAAAA,gBAAgB,CAACC,KAAD,EAAa;AACrC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiBF,KAAK,CAACG,WAA7B;;AACA,QAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzB,WAAKD,KAAL,CAAWC,UAAX,CAAsBJ,IAAtB,EAA4BC,IAA5B;AACD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE,6BAAC,yBAAD,eACM,KAAKF,KADX;AAEE,MAAA,KAAK,EAAE,CAAC,KAAKA,KAAL,CAAWG,KAAZ,EAAmB,KAAKC,KAAL,CAAWD,KAA9B,CAFT;AAGE,MAAA,UAAU,EAAE,KAAKE,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAHd;AAIE,MAAA,gBAAgB,EAAE,KAAKC,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAJpB;AAKE,MAAA,UAAU,EAAE,KAAKE,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CALd;AAME,MAAA,UAAU,EAAE,KAAKG,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CANd;AAOE,MAAA,UAAU,EAAE,KAAKX,gBAAL,CAAsBW,IAAtB,CAA2B,IAA3B,CAPd;AAQE,MAAA,YAAY,EAAE,KAAKI,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CARhB;AASE,MAAA,cAAc,EAAE,KAAKN,KAAL,CAAWW,cAAX,IAA6B,EAT/C;AAUE,MAAA,GAAG,EAAGC,EAAD,IAAQ;AACX;AACA,aAAKC,SAAL,GAAiBD,EAAjB;AACD;AAbH,OADF;AAiBD;;AA1BgD;;eA6BpCnB,W","sourcesContent":["import React from 'react';\n\nimport { GAMBannerAdProps } from '../../types';\n\nimport BaseAd, { RNAdMobBannerView } from './BaseAd';\n\nclass GAMBannerAd extends BaseAd<GAMBannerAdProps> {\n  protected handleOnAppEvent(event: any) {\n    const { name, info } = event.nativeEvent;\n    if (this.props.onAppEvent) {\n      this.props.onAppEvent(name, info);\n    }\n  }\n\n  render() {\n    return (\n      <RNAdMobBannerView\n        {...this.props}\n        style={[this.props.style, this.state.style]}\n        onAdLoaded={this.handleOnAdLoaded.bind(this)}\n        onAdFailedToLoad={this.handleOnAdFailedToLoad.bind(this)}\n        onAdOpened={this.handleOnAdOpened.bind(this)}\n        onAdClosed={this.handleOnAdClosed.bind(this)}\n        onAppEvent={this.handleOnAppEvent.bind(this)}\n        onSizeChange={this.handleSizeChange.bind(this)}\n        requestOptions={this.props.requestOptions || {}}\n        ref={(el) => {\n          //@ts-expect-error\n          this.bannerRef = el;\n        }}\n      />\n    );\n  }\n}\n\nexport default GAMBannerAd;\n"]}