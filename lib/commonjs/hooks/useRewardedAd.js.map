{"version":3,"sources":["useRewardedAd.ts"],"names":["useRewardedAd","unitId","options","rewardedAd","setRewardedAd","prevAd","destroy","RewardedAd","createAd"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAGA;;;;AAEA;AACA;AACA;AACA;AACA;AACe,SAASA,aAAT,CACbC,MADa,EAGE;AAAA,MADfC,OACe,uEADgB,EAChB;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,qBAA4B,IAA5B,CAApC;AAEA,qCAAqB,MAAM;AACzBA,IAAAA,aAAa,CAAEC,MAAD,IAAY;AACxBA,MAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,OAAR;AACA,aAAOL,MAAM,GAAGM,uBAAWC,QAAX,CAAoBP,MAApB,EAA4BC,OAA5B,CAAH,GAA0C,IAAvD;AACD,KAHY,CAAb;AAID,GALD,EAKG,CAACD,MAAD,EAASC,OAAT,CALH;AAOA,SAAO,8BAAgBC,UAAhB,CAAP;AACD","sourcesContent":["import { useState } from 'react';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nimport { RewardedAd } from '../ads/fullscreen';\nimport { AdHookReturns, FullScreenAdOptions } from '../types';\n\nimport useFullScreenAd from './useFullScreenAd';\n\n/**\n * React Hook for AdMob Rewarded Ad.\n * @param unitId Rewarded Ad Unit Id\n * @param options `FullScreenAdOptions`\n */\nexport default function useRewardedAd(\n  unitId: string | null,\n  options: FullScreenAdOptions = {}\n): AdHookReturns {\n  const [rewardedAd, setRewardedAd] = useState<RewardedAd | null>(null);\n\n  useDeepCompareEffect(() => {\n    setRewardedAd((prevAd) => {\n      prevAd?.destroy();\n      return unitId ? RewardedAd.createAd(unitId, options) : null;\n    });\n  }, [unitId, options]);\n\n  return useFullScreenAd(rewardedAd);\n}\n"]}