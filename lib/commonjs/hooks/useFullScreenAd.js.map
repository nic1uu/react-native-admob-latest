{"version":3,"sources":["useFullScreenAd.ts"],"names":["initialState","adLoaded","adPresented","adDismissed","adLoadError","undefined","adPresentError","reward","useFullScreenAd","ad","state","setState","prevState","newState","adShowing","load","requestOptions","catch","show","listeners","addEventListener","error","options","loadOnDismissed","type","forEach","listener","remove"],"mappings":";;;;;;;AAAA;;AAgBA,MAAMA,YAA+B,GAAG;AACtCC,EAAAA,QAAQ,EAAE,KAD4B;AAEtCC,EAAAA,WAAW,EAAE,KAFyB;AAGtCC,EAAAA,WAAW,EAAE,KAHyB;AAItCC,EAAAA,WAAW,EAAEC,SAJyB;AAKtCC,EAAAA,cAAc,EAAED,SALsB;AAMtCE,EAAAA,MAAM,EAAEF;AAN8B,CAAxC;;AASe,SAASG,eAAT,CAObC,EAPa,EAOS;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB,uBAExB,CAACC,SAAD,EAAYC,QAAZ,MAA0B,EAAE,GAAGD,SAAL;AAAgB,OAAGC;AAAnB,GAA1B,CAFwB,EAEkCb,YAFlC,CAA1B;AAGA,QAAMc,SAAS,GAAGJ,KAAK,CAACR,WAAN,IAAqB,CAACQ,KAAK,CAACP,WAA9C;AAEA,QAAMY,IAAI,GAAG,wBACVC,cAAD,IAAqC;AACnC,QAAIP,EAAJ,EAAQ;AACNE,MAAAA,QAAQ,CAACX,YAAD,CAAR;AACAS,MAAAA,EAAE,CAACM,IAAH,CAAQC,cAAR,EAAwBC,KAAxB,CAA8B,MAAM,CAAE,CAAtC;AACD;AACF,GANU,EAOX,CAACR,EAAD,CAPW,CAAb;AAUA,QAAMS,IAAI,GAAG,wBAAY,MAAM;AAC7B,QAAIT,EAAJ,EAAQ;AACNA,MAAAA,EAAE,CAACS,IAAH,GAAUD,KAAV,CAAgB,MAAM,CAAE,CAAxB;AACD;AACF,GAJY,EAIV,CAACR,EAAD,CAJU,CAAb;AAMA,wBAAU,MAAM;AACdE,IAAAA,QAAQ,CAACX,YAAD,CAAR;;AACA,QAAI,CAACS,EAAL,EAAS;AACP;AACD;;AACD,UAAMU,SAAS,GAAG,CAChBV,EAAE,CAACW,gBAAH,CAAoB,UAApB,EAAgC,MAAMT,QAAQ,CAAC;AAAEV,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA9C,CADgB,EAEhBQ,EAAE,CAACW,gBAAH,CAAoB,gBAApB,EAAuCC,KAAD,IACpCV,QAAQ,CAAC;AAAEP,MAAAA,WAAW,EAAEiB;AAAf,KAAD,CADV,CAFgB,EAKhBZ,EAAE,CAACW,gBAAH,CAAoB,aAApB,EAAmC,MAAMT,QAAQ,CAAC;AAAET,MAAAA,WAAW,EAAE;AAAf,KAAD,CAAjD,CALgB,EAMhBO,EAAE,CAACW,gBAAH,CAAoB,mBAApB,EAA0CC,KAAD,IACvCV,QAAQ,CAAC;AAAEL,MAAAA,cAAc,EAAEe;AAAlB,KAAD,CADV,CANgB,EAShBZ,EAAE,CAACW,gBAAH,CAAoB,aAApB,EAAmC,MAAM;AACvCT,MAAAA,QAAQ,CAAC;AAAER,QAAAA,WAAW,EAAE;AAAf,OAAD,CAAR;;AACA,UAAIM,EAAE,CAACa,OAAH,CAAWC,eAAf,EAAgC;AAC9BZ,QAAAA,QAAQ,CAACX,YAAD,CAAR;AACD;AACF,KALD,CATgB,EAehBS,EAAE,CAACe,IAAH,KAAY,UAAZ,IAA0Bf,EAAE,CAACe,IAAH,KAAY,sBAAtC,GACKf,EAAD,CAA4CW,gBAA5C,CACE,UADF,EAEGb,MAAD,IAAoBI,QAAQ,CAAC;AAAEJ,MAAAA;AAAF,KAAD,CAF9B,CADJ,GAKIF,SApBY,CAAlB;AAsBA,WAAO,MAAM;AACXc,MAAAA,SAAS,CAACM,OAAV,CAAmBC,QAAD,IAAcA,QAAd,aAAcA,QAAd,uBAAcA,QAAQ,CAAEC,MAAV,EAAhC;AACD,KAFD;AAGD,GA9BD,EA8BG,CAAClB,EAAD,CA9BH;AAgCA,SAAO,EACL,GAAGC,KADE;AAELI,IAAAA,SAFK;AAGLC,IAAAA,IAHK;AAILG,IAAAA;AAJK,GAAP;AAMD","sourcesContent":["import { Reducer, useCallback, useEffect, useReducer } from 'react';\n\nimport AdError from '../AdError';\nimport {\n  AppOpenAd,\n  InterstitialAd,\n  RewardedAd,\n  RewardedInterstitialAd,\n} from '../ads/fullscreen';\nimport {\n  AdHookReturns,\n  FullScreenAdState,\n  RequestOptions,\n  Reward,\n} from '../types';\n\nconst initialState: FullScreenAdState = {\n  adLoaded: false,\n  adPresented: false,\n  adDismissed: false,\n  adLoadError: undefined,\n  adPresentError: undefined,\n  reward: undefined,\n};\n\nexport default function useFullScreenAd<\n  T extends\n    | InterstitialAd\n    | RewardedAd\n    | RewardedInterstitialAd\n    | AppOpenAd\n    | null\n>(ad: T): AdHookReturns {\n  const [state, setState] = useReducer<\n    Reducer<FullScreenAdState, Partial<FullScreenAdState>>\n  >((prevState, newState) => ({ ...prevState, ...newState }), initialState);\n  const adShowing = state.adPresented && !state.adDismissed;\n\n  const load = useCallback(\n    (requestOptions?: RequestOptions) => {\n      if (ad) {\n        setState(initialState);\n        ad.load(requestOptions).catch(() => {});\n      }\n    },\n    [ad]\n  );\n\n  const show = useCallback(() => {\n    if (ad) {\n      ad.show().catch(() => {});\n    }\n  }, [ad]);\n\n  useEffect(() => {\n    setState(initialState);\n    if (!ad) {\n      return;\n    }\n    const listeners = [\n      ad.addEventListener('adLoaded', () => setState({ adLoaded: true })),\n      ad.addEventListener('adFailedToLoad', (error: AdError) =>\n        setState({ adLoadError: error })\n      ),\n      ad.addEventListener('adPresented', () => setState({ adPresented: true })),\n      ad.addEventListener('adFailedToPresent', (error: AdError) =>\n        setState({ adPresentError: error })\n      ),\n      ad.addEventListener('adDismissed', () => {\n        setState({ adDismissed: true });\n        if (ad.options.loadOnDismissed) {\n          setState(initialState);\n        }\n      }),\n      ad.type === 'Rewarded' || ad.type === 'RewardedInterstitial'\n        ? (ad as RewardedAd | RewardedInterstitialAd).addEventListener(\n            'rewarded',\n            (reward: Reward) => setState({ reward })\n          )\n        : undefined,\n    ];\n    return () => {\n      listeners.forEach((listener) => listener?.remove());\n    };\n  }, [ad]);\n\n  return {\n    ...state,\n    adShowing,\n    load,\n    show,\n  };\n}\n"]}